[buildout]
extends = http://dist.plone.org/release/4.3.6/versions.cfg
extensions = mr.developer
parts =
    instance
    test
    coverage
    test-coverage
    code-analysis
    releaser
    sphinxbuilder
    sphinx-python
    deploy-to-heroku
develop = .

[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
eggs =
    Plone
    Pillow
    plone.rest [test]

[test]
recipe = zc.recipe.testrunner
eggs = ${instance:eggs}
defaults = ['-s', 'plone.rest', '--auto-color', '--auto-progress']

[coverage]
recipe = zc.recipe.egg
eggs = coverage

[test-coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    ${buildout:directory}/bin/coverage run --source=${buildout:directory}/src/plone/rest bin/test
    ${buildout:directory}/bin/coverage html
    ${buildout:directory}/bin/coverage report -m --fail-under=50
    # Fail (exit status 1) if coverage returns exit status 2 (this happens
    # when test coverage is below 100%.
output = ${buildout:directory}/bin/test-coverage
mode = 755

[code-analysis]
recipe = plone.recipe.codeanalysis
directory = ${buildout:directory}/src
flake8-max-complexity = 15

[releaser]
recipe = zc.recipe.egg
eggs =
    zest.releaser
    httpie

[sphinxbuilder]
recipe = collective.recipe.sphinxbuilder
source = ${buildout:directory}/docs/source
build = ${buildout:directory}/docs

[sphinx-python]
recipe = zc.recipe.egg
eggs = sphinx_rtd_theme
interpreter = sphinxPython

[deploy-to-heroku]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    git push heroku master
output = ${buildout:directory}/bin/deploy-to-heroku
mode = 755


[versions]
# Build
setuptools =
zc.buildout = 2.3.1
zc.recipe.egg = 2.0.1

zope.interface = 4.0.5
coverage = 3.7.1
flake8 = 2.3.0
Sphinx = 1.3.1
docutils = 0.12
Pygments = 2.0.2
